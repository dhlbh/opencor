/* This file is automatically generated from SRuS.idl
 * DO NOT EDIT DIRECTLY OR CHANGES WILL BE LOST!
 */
#ifndef _GUARD_IFACE_SRuS
#define _GUARD_IFACE_SRuS
#include "cda_compiler_support.h"
#ifdef MODULE_CONTAINS_SRuS
#define PUBLIC_SRuS_PRE CDA_EXPORT_PRE
#define PUBLIC_SRuS_POST CDA_EXPORT_POST
#else
#define PUBLIC_SRuS_PRE CDA_IMPORT_PRE
#define PUBLIC_SRuS_POST CDA_IMPORT_POST
#endif
#include "Ifacexpcom.hxx"
#include "IfaceDOM_APISPEC.hxx"
#include "IfaceMathML_content_APISPEC.hxx"
#include "IfaceSProS.hxx"
namespace iface
{
  namespace SRuS
  {
    class TransformedModel;
    class TransformedModelSet;
    class GeneratedData;
    class GeneratedDataSet;
    class GeneratedDataMonitor;
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST SRuSException : public std::exception
    {
    public:
      SRuSException(){}
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST SEDMLProcessor
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~SEDMLProcessor() {}
      virtual bool supportsModellingLanguage(const wchar_t* aNSURI) throw(std::exception&) = 0;
      virtual iface::SRuS::TransformedModel* buildOneModel(iface::SProS::Model* aModel) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::SRuS::TransformedModelSet* buildAllModels(iface::SProS::SEDMLElement* aElement) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void generateData(iface::SRuS::TransformedModelSet* aSet, iface::SProS::SEDMLElement* aElement, iface::SRuS::GeneratedDataMonitor* aMonitor) throw(std::exception&) = 0;
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST TransformedModel
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~TransformedModel() {}
      virtual iface::dom::Document* xmlDocument() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual iface::XPCOM::IObject* modelDocument() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual iface::SProS::Model* sedmlModel() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST TransformedModelSet
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~TransformedModelSet() {}
      virtual uint32_t length() throw(std::exception&)  = 0;
      virtual iface::SRuS::TransformedModel* item(uint32_t idx) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::SRuS::TransformedModel* getItemByID(const wchar_t* matchId) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST GeneratedDataMonitor
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~GeneratedDataMonitor() {}
      virtual void progress(iface::SRuS::GeneratedDataSet* aData) throw(std::exception&) = 0;
      virtual void failure(const char* aErrMsg) throw(std::exception&) = 0;
      virtual void done() throw(std::exception&) = 0;
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST GeneratedData
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~GeneratedData() {}
      virtual iface::SProS::DataGenerator* sedmlDataGenerator() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual uint32_t length() throw(std::exception&)  = 0;
      virtual double dataPoint(uint32_t idx) throw(std::exception&) = 0;
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST GeneratedDataSet
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~GeneratedDataSet() {}
      virtual uint32_t length() throw(std::exception&)  = 0;
      virtual iface::SRuS::GeneratedData* item(uint32_t idx) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_SRuS_PRE 
    class  PUBLIC_SRuS_POST Bootstrap
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~Bootstrap() {}
      virtual iface::SRuS::SEDMLProcessor* makeDefaultProcessor() throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
  };
};
#undef PUBLIC_SRuS_PRE
#undef PUBLIC_SRuS_POST
#endif // guard
