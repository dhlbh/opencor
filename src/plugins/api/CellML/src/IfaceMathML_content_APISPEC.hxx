/* This file is automatically generated from MathML_content_APISPEC.idl
 * DO NOT EDIT DIRECTLY OR CHANGES WILL BE LOST!
 */
#ifndef _GUARD_IFACE_MathMLcontentAPISPEC
#define _GUARD_IFACE_MathMLcontentAPISPEC
#include "cda_compiler_support.h"
#ifdef MODULE_CONTAINS_MathMLcontentAPISPEC
#define PUBLIC_MathMLcontentAPISPEC_PRE CDA_EXPORT_PRE
#define PUBLIC_MathMLcontentAPISPEC_POST CDA_EXPORT_POST
#else
#define PUBLIC_MathMLcontentAPISPEC_PRE CDA_IMPORT_PRE
#define PUBLIC_MathMLcontentAPISPEC_POST CDA_IMPORT_POST
#endif
#include "Ifacexpcom.hxx"
#include "IfaceDOM_APISPEC.hxx"
namespace iface
{
  namespace mathml_dom
  {
    class MathMLDocument;
    class MathMLMathElement;
    class MathMLBvarElement;
    class MathMLConditionElement;
    class MathMLDeclareElement;
    class MathMLMatrixrowElement;
    class MathMLCaseElement;
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLDOMImplementation
     : public virtual iface::dom::DOMImplementation
    {
    public:
      virtual ~MathMLDOMImplementation() {}
      virtual iface::mathml_dom::MathMLDocument* createMathMLDocument() throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLDocument
     : public virtual iface::dom::Document
    {
    public:
      virtual ~MathMLDocument() {}
      virtual wchar_t* referrer() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual wchar_t* domain() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual wchar_t* URI() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLNodeList
     : public virtual iface::dom::NodeList
    {
    public:
      virtual ~MathMLNodeList() {}
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLElement
     : public virtual iface::dom::Element
    {
    public:
      virtual ~MathMLElement() {}
      virtual wchar_t* className() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void className(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* mathElementStyle() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void mathElementStyle(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* id() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void id(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* xref() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void xref(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* href() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void href(const wchar_t* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLMathElement* ownerMathElement() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLContainer
     : public virtual iface::XPCOM::IObject
    {
    public:
      virtual ~MathMLContainer() {}
      virtual uint32_t nArguments() throw(std::exception&)  = 0;
      virtual iface::mathml_dom::MathMLNodeList* arguments() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLNodeList* declarations() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLElement* getArgument(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLElement* setArgument(iface::mathml_dom::MathMLElement* newArgument, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLElement* insertArgument(iface::mathml_dom::MathMLElement* newArgument, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteArgument(uint32_t index) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* removeArgument(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLDeclareElement* getDeclaration(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLDeclareElement* setDeclaration(iface::mathml_dom::MathMLDeclareElement* newDeclaration, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLDeclareElement* insertDeclaration(iface::mathml_dom::MathMLDeclareElement* newDeclaration, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLDeclareElement* removeDeclaration(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteDeclaration(uint32_t index) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLMathElement
     : public virtual iface::mathml_dom::MathMLElement , public virtual iface::mathml_dom::MathMLContainer
    {
    public:
      virtual ~MathMLMathElement() {}
      virtual wchar_t* macros() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void macros(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* display() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void display(const wchar_t* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLContentElement
     : public virtual iface::mathml_dom::MathMLElement
    {
    public:
      virtual ~MathMLContentElement() {}
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLContentToken
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLContentToken() {}
      virtual iface::mathml_dom::MathMLNodeList* arguments() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual wchar_t* definitionURL() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void definitionURL(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* encoding() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void encoding(const wchar_t* attr) throw(std::exception&) = 0;
      virtual iface::dom::Node* getArgument(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::dom::Node* insertArgument(iface::dom::Node* newArgument, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::dom::Node* setArgument(iface::dom::Node* newArgument, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteArgument(uint32_t index) throw(std::exception&) = 0;
      virtual iface::dom::Node* removeArgument(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLCnElement
     : public virtual iface::mathml_dom::MathMLContentToken
    {
    public:
      virtual ~MathMLCnElement() {}
      virtual wchar_t* type() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void type(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* base() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void base(const wchar_t* attr) throw(std::exception&) = 0;
      virtual uint32_t nargs() throw(std::exception&)  = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLCiElement
     : public virtual iface::mathml_dom::MathMLContentToken
    {
    public:
      virtual ~MathMLCiElement() {}
      virtual wchar_t* type() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void type(const wchar_t* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLCsymbolElement
     : public virtual iface::mathml_dom::MathMLContentToken
    {
    public:
      virtual ~MathMLCsymbolElement() {}
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLContentContainer
     : public virtual iface::mathml_dom::MathMLContentElement , public virtual iface::mathml_dom::MathMLContainer
    {
    public:
      virtual ~MathMLContentContainer() {}
      virtual uint32_t nBoundVariables() throw(std::exception&)  = 0;
      virtual iface::mathml_dom::MathMLConditionElement* condition() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void condition(iface::mathml_dom::MathMLConditionElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* opDegree() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void opDegree(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* domainOfApplication() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void domainOfApplication(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* momentAbout() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void momentAbout(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLBvarElement* getBoundVariable(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLBvarElement* insertBoundVariable(iface::mathml_dom::MathMLBvarElement* newBVar, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLBvarElement* setBoundVariable(iface::mathml_dom::MathMLBvarElement* newBVar, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteBoundVariable(uint32_t index) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLBvarElement* removeBoundVariable(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLApplyElement
     : public virtual iface::mathml_dom::MathMLContentContainer
    {
    public:
      virtual ~MathMLApplyElement() {}
      virtual iface::mathml_dom::MathMLElement* _cxx_operator() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void _cxx_operator(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* lowLimit() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void lowLimit(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* upLimit() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void upLimit(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLFnElement
     : public virtual iface::mathml_dom::MathMLContentContainer
    {
    public:
      virtual ~MathMLFnElement() {}
      virtual wchar_t* definitionURL() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void definitionURL(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* encoding() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void encoding(const wchar_t* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLLambdaElement
     : public virtual iface::mathml_dom::MathMLContentContainer
    {
    public:
      virtual ~MathMLLambdaElement() {}
      virtual iface::mathml_dom::MathMLElement* expression() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void expression(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLSetElement
     : public virtual iface::mathml_dom::MathMLContentContainer
    {
    public:
      virtual ~MathMLSetElement() {}
      virtual bool isExplicit() throw(std::exception&)  = 0;
      virtual wchar_t* type() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void type(const wchar_t* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLListElement
     : public virtual iface::mathml_dom::MathMLContentContainer
    {
    public:
      virtual ~MathMLListElement() {}
      virtual bool isExplicit() throw(std::exception&)  = 0;
      virtual wchar_t* ordering() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void ordering(const wchar_t* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLBvarElement
     : public virtual iface::mathml_dom::MathMLContentContainer
    {
    public:
      virtual ~MathMLBvarElement() {}
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLPredefinedSymbol
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLPredefinedSymbol() {}
      virtual wchar_t* definitionURL() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void definitionURL(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* encoding() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void encoding(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* arity() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual wchar_t* symbolName() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLTendsToElement
     : public virtual iface::mathml_dom::MathMLPredefinedSymbol
    {
    public:
      virtual ~MathMLTendsToElement() {}
      virtual wchar_t* type() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void type(const wchar_t* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLIntervalElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLIntervalElement() {}
      virtual wchar_t* closure() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void closure(const wchar_t* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLContentElement* start() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void start(iface::mathml_dom::MathMLContentElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLContentElement* end() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void end(iface::mathml_dom::MathMLContentElement* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLConditionElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLConditionElement() {}
      virtual iface::mathml_dom::MathMLApplyElement* condition() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void condition(iface::mathml_dom::MathMLApplyElement* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLDeclareElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLDeclareElement() {}
      virtual wchar_t* type() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void type(const wchar_t* attr) throw(std::exception&) = 0;
      virtual uint32_t nargs() throw(std::exception&)  = 0;
      virtual void nargs(uint32_t attr) throw(std::exception&) = 0;
      virtual wchar_t* occurrence() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void occurrence(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* definitionURL() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void definitionURL(const wchar_t* attr) throw(std::exception&) = 0;
      virtual wchar_t* encoding() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void encoding(const wchar_t* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLCiElement* identifier() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void identifier(iface::mathml_dom::MathMLCiElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLElement* constructor() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void constructor(iface::mathml_dom::MathMLElement* attr) throw(std::exception&) = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLVectorElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLVectorElement() {}
      virtual uint32_t ncomponents() throw(std::exception&)  = 0;
      virtual iface::mathml_dom::MathMLContentElement* getComponent(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* insertComponent(iface::mathml_dom::MathMLContentElement* newComponent, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* setComponent(iface::mathml_dom::MathMLContentElement* newComponent, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteComponent(uint32_t index) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLContentElement* removeComponent(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLMatrixElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLMatrixElement() {}
      virtual uint32_t nrows() throw(std::exception&)  = 0;
      virtual uint32_t ncols() throw(std::exception&)  = 0;
      virtual iface::mathml_dom::MathMLNodeList* rows() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLMatrixrowElement* getRow(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLMatrixrowElement* insertRow(iface::mathml_dom::MathMLMatrixrowElement* newRow, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLMatrixrowElement* setRow(iface::mathml_dom::MathMLMatrixrowElement* newRow, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteRow(uint32_t index) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLMatrixrowElement* removeRow(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLMatrixrowElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLMatrixrowElement() {}
      virtual uint32_t nEntries() throw(std::exception&)  = 0;
      virtual iface::mathml_dom::MathMLContentElement* getEntry(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* insertEntry(iface::mathml_dom::MathMLContentElement* newEntry, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* setEntry(iface::mathml_dom::MathMLContentElement* newEntry, uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteEntry(uint32_t index) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLContentElement* removeEntry(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLPiecewiseElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLPiecewiseElement() {}
      virtual iface::mathml_dom::MathMLNodeList* pieces() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* otherwise() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void otherwise(iface::mathml_dom::MathMLContentElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLCaseElement* getCase(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLCaseElement* setCase(uint32_t index, iface::mathml_dom::MathMLCaseElement* caseEl) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual void deleteCase(uint32_t index) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLCaseElement* removeCase(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLCaseElement* insertCase(uint32_t index, iface::mathml_dom::MathMLCaseElement* newCase) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* getCaseValue(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* setCaseValue(uint32_t index, iface::mathml_dom::MathMLContentElement* value) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* getCaseCondition(uint32_t index) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
      virtual iface::mathml_dom::MathMLContentElement* setCaseCondition(uint32_t index, iface::mathml_dom::MathMLContentElement* condition) throw(std::exception&) WARN_IF_RETURN_UNUSED = 0;
    };
    PUBLIC_MathMLcontentAPISPEC_PRE 
    class  PUBLIC_MathMLcontentAPISPEC_POST MathMLCaseElement
     : public virtual iface::mathml_dom::MathMLContentElement
    {
    public:
      virtual ~MathMLCaseElement() {}
      virtual iface::mathml_dom::MathMLContentElement* caseCondition() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void caseCondition(iface::mathml_dom::MathMLContentElement* attr) throw(std::exception&) = 0;
      virtual iface::mathml_dom::MathMLContentElement* caseValue() throw(std::exception&)  WARN_IF_RETURN_UNUSED = 0;
      virtual void caseValue(iface::mathml_dom::MathMLContentElement* attr) throw(std::exception&) = 0;
    };
  };
};
#undef PUBLIC_MathMLcontentAPISPEC_PRE
#undef PUBLIC_MathMLcontentAPISPEC_POST
#endif // guard
